{"version":3,"sources":["StreamlitPlotlyEventsComponent.tsx","index.tsx"],"names":["StreamlitPlotlyEventsComponent","render","plot_obj","JSON","parse","props","args","override_height","override_width","click_event","select_event","hover_event","Streamlit","setFrameHeight","data","layout","config","frames","onClick","plotlyEventHandler","onSelected","onHover","style","width","height","className","return_fields","clickedPoints","points","forEach","arrayItem","clickedPoint","x","y","pointNumber","pointIndex","curveNumber","customdata","push","setComponentValue","stringify","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"iRAQMA,E,4MACGC,OAAS,WAEd,IAAMC,EAAWC,KAAKC,MAAM,EAAKC,MAAMC,KAAX,UACtBC,EAAkB,EAAKF,MAAMC,KAAX,gBAClBE,EAAiB,EAAKH,MAAMC,KAAX,eAGjBG,EAAc,EAAKJ,MAAMC,KAAX,YACdI,EAAe,EAAKL,MAAMC,KAAX,aACfK,EAAc,EAAKN,MAAMC,KAAX,YAIpB,OADAM,IAAUC,eAAeN,GAEvB,kBAAC,IAAD,CACEO,KAAMZ,EAASY,KACfC,OAAQb,EAASa,OACjBC,OAAQd,EAASc,OACjBC,OAAQf,EAASe,OACjBC,QAAST,EAAc,EAAKU,mBAAqB,aACjDC,WAAYV,EAAe,EAAKS,mBAAqB,aACrDE,QAASV,EAAc,EAAKQ,mBAAqB,aACjDG,MAAO,CAACC,MAAOf,EAAgBgB,OAAQjB,GACvCkB,UAAU,mB,EAMRN,mBAAqB,SAACL,GAC5B,IAAMY,EAAgB,EAAKrB,MAAMC,KAAX,cAGlBqB,EAA4B,GAChCb,EAAKc,OAAOC,SAAQ,SAAUC,GAC5B,IAAIC,EAAoB,GACxBA,EAAaC,EAAIF,EAAUE,EAC3BD,EAAaE,EAAIH,EAAUG,EAC3BF,EAAaG,YAAcJ,EAAUI,YACrCH,EAAaI,WAAaL,EAAUK,WACpCJ,EAAaK,YAAcN,EAAUM,YACjCV,IACFK,EAAaM,WAAaP,EAAUO,YAGtCV,EAAcW,KAAKP,MAIrBnB,IAAU2B,kBAAkBpC,KAAKqC,UAAUb,K,yBAlDFc,KAsD9BC,cAAwB1C,GC1DvC2C,IAAS1C,OACP,kBAAC,IAAM2C,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.2f1f2f3e.chunk.js","sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode } from \"react\"\nimport Plot from 'react-plotly.js';\n\nclass StreamlitPlotlyEventsComponent extends StreamlitComponentBase {\n  public render = (): ReactNode => {\n    // Pull Plotly object from args and parse\n    const plot_obj = JSON.parse(this.props.args[\"plot_obj\"]);\n    const override_height = this.props.args[\"override_height\"];\n    const override_width = this.props.args[\"override_width\"];\n\n    // Event booleans\n    const click_event = this.props.args[\"click_event\"];\n    const select_event = this.props.args[\"select_event\"];\n    const hover_event = this.props.args[\"hover_event\"];\n    \n\n    Streamlit.setFrameHeight(override_height);\n    return (\n      <Plot\n        data={plot_obj.data}\n        layout={plot_obj.layout}\n        config={plot_obj.config}\n        frames={plot_obj.frames}\n        onClick={click_event ? this.plotlyEventHandler : function(){}}\n        onSelected={select_event ? this.plotlyEventHandler : function(){}}\n        onHover={hover_event ? this.plotlyEventHandler : function(){}}\n        style={{width: override_width, height: override_height}}\n        className=\"stPlotlyChart\"\n      />\n    )\n  }\n\n  /** Click handler for plot. */\n  private plotlyEventHandler = (data: any) => {\n    const return_fields = this.props.args[\"return_fields\"];\n    \n    // Build array of points to return\n    var clickedPoints: Array<any> = [];\n    data.points.forEach(function (arrayItem: any) {\n      let clickedPoint: any = {};\n      clickedPoint.x = arrayItem.x;\n      clickedPoint.y = arrayItem.y;\n      clickedPoint.pointNumber = arrayItem.pointNumber;\n      clickedPoint.pointIndex = arrayItem.pointIndex;\n      clickedPoint.curveNumber = arrayItem.curveNumber;\n      if (return_fields){\n        clickedPoint.customdata = arrayItem.customdata;\n      }\n\n      clickedPoints.push(clickedPoint);\n    });\n\n    // Return array as JSON to Streamlit\n    Streamlit.setComponentValue(JSON.stringify(clickedPoints))\n  }\n}\n\nexport default withStreamlitConnection(StreamlitPlotlyEventsComponent)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport StreamlitPlotlyEventsComponent from \"./StreamlitPlotlyEventsComponent\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <StreamlitPlotlyEventsComponent />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}